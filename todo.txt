Graphes
	Vérifications : doit être une option avec moult précautions, cf. pysql
	Mettre des liens dans les graphes ?
	Compos multi envt => bandes de couleur, compo lui même blanc
	Liens avec la page d'accueil :
		-Un graphe par composant, avec tous ses sous composants (et un rang de parents ?)
	Graphe pour les patchs ! => INTERET DOUTEUX
	Faire une class mère DrawingContext avec les fonctions de base (nodeExists, toFile, toScreen, addNode, getNode, ...)
	
Référentiel
	Longueur des varchars à uniformiser/rationaliser
	Empêcher des associations stupides (deux serveurs par AS, un MQ sur IFPC...) 
		=> validation de modèle, non dispo en DjangoV1
	Scripts de sortie des données sur sortie standard pour appel scripts dédiés (bash, ksh, ...). 

GCL
	Fonctionaliser le install.py, pour permettre une utilisation facile depuis Python, et pas seulement le shell...
	Comparaison de IS à partir de la comparaison de CTV (si dep > concerné, alors ...)
	Faire un formulaire pour les listes de CTV (par modèle, par classe de composant) 
		(+ faire un tri sur classe avant de trier par ctv)
	Dépendances : 
		faire fonction "comment aller de version A à version Z" (liste => vue + template)
	Ajout champs "retour arrière possible" dans les liv ?
	Fonction "où par rapport au tag X"
	
Sauvegardes
	Rajouter une prévisualisation (Ajax) de la sauvegarde lors des suppressions
	Proposer de descendre dans les abonnés lors des sauvegardes ? (ie. la sauvegarde d'un schéma sauve aussi tous les packages, etc)
	Paramètrage : ce qu'il faut sauvegarder (dans le cas d'une full) (ou propriété dans le modèle ? Arg !) 
	
Appli générale :
	Gestion des options
	Mettre les urls dans des fichiers par application
	Contrôle d'accès (appli interne Django !)
	
Interface avec système gestion tickets ?

Optim : supprimer les classe d'admin du référentiel, car cela force un import de toutes les applications !
De plus, pose pb d'imports circulaires...  (une app avec des classes d'admin ne doit pas être importée...)