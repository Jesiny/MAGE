Graphes
	Vérifications : doit être une option avec moultes précautions, cf. pysql
	Mettre des liens dans les graphes ?
	Compos multi envt => bandes de couleur, compo lui même blanc
	Liens avec la page d'accueil :
		-Un graphe par composant, avec tous ses sous composants (et un rang de parents ?)
	
Référentiel

GCL
	Fonctionaliser le install.py, pour permettre une utilisation facile depuis Python, et pas seulement le shell...
	install.py : permettre de ne pas donner modele... (changer la notation)
	Faire un formulaire pour les listes de CTV (par modèle, par classe de composant) 
		(+ faire un tri sur classe avant de trier par ctv)
	Dépendances : 
		faire fonction "comment aller de version A à version Z" (liste => vue + template)
	Fonction "où par rapport au tag X"
	Utiliser le champ "version précédente" dans les tris de CTV de même nature.
	
Sauvegardes
	Rajouter une prévisualisation (Ajax) de la sauvegarde lors des suppressions
	
Appli générale :
	fonction + tag isApplicationPresent (packaging)
	Contrôle d'accès (appli interne Django !)
	le déploiement actuel IIS pèche au niveau statique (même pool d'application)
	Ajouter la description de l'application paramètres à la doc.
	
Interface avec système gestion tickets ?
-> Classification auto des demandes selon catégories à paramétrer (sauvegarde, chargement, patch...)
-> paramétrer les user/groupes du TKM qui font partie de la GE.

Un script de purge des données à date (installs notamment) paramétré dans prm ?

Optim : supprimer les classe d'admin du référentiel, car cela force un import de toutes les applications !
De plus, pose pb d'imports circulaires...  (une app avec des classes d'admin ne doit pas être importée...)
