Graphes
	Vérifications : doit être une option avec moultes précautions, cf. pysql
	Mettre des liens dans les graphes ?
	Compos multi envt => bandes de couleur, compo lui même blanc
	Liens avec la page d'accueil :
		-Un graphe par composant, avec tous ses sous composants (et un rang de parents ?)
	Graphe pour les patchs ! => INTERET DOUTEUX
	
Référentiel
	Empêcher des associations stupides (deux serveurs par AS, un MQ sur IFPC...) 
		=> validation de modèle, non dispo en DjangoV1

GCL
	Fonctionaliser le install.py, pour permettre une utilisation facile depuis Python, et pas seulement le shell...
	Comparaison de IS à partir de la comparaison de CTV (si dep > concerné, alors ...)
	Faire un formulaire pour les listes de CTV (par modèle, par classe de composant) 
		(+ faire un tri sur classe avant de trier par ctv)
	Dépendances : 
		faire fonction "comment aller de version A à version Z" (liste => vue + template)
	Fonction "où par rapport au tag X"
	
Sauvegardes
	Rajouter une prévisualisation (Ajax) de la sauvegarde lors des suppressions
	Proposer de descendre dans les abonnés lors des sauvegardes ? (ie. la sauvegarde d'un schéma sauve aussi tous les packages, etc)
	Paramètrage : ecrire fonction composant par composant 
	
Appli générale :
	fonction + tag isApplicationPresent (packaging)
	Contrôle d'accès (appli interne Django !)
	le déploiement actuel IIS pèche au niveau statique (même pool d'application)
	
Interface avec système gestion tickets ?

Optim : supprimer les classe d'admin du référentiel, car cela force un import de toutes les applications !
De plus, pose pb d'imports circulaires...  (une app avec des classes d'admin ne doit pas être importée...)